<?xml version="1.0" encoding="UTF-8"?>
<project name="Thaw" default="all" basedir=".">
    <description>
        Build file for Thaw app.
    </description>

    <property file="build.properties"/>


    <property name="JDK1.9.dir" value=""/>
    <property name="javac1.9" location="${JDK1.9.dir}/bin/javac"/>
    <!-- In build.properties file
        JDK1.9.dir=./jdk1.9.0
        javac1.9=${JDK1.9.dir}/bin/javac
    -->
    <!-- Print the java version -->
    <target name="print-version">
        <echo>Java/JVM version: ${ant.java.version}</echo>
        <echo>Java/JVM detail version: ${java.version}</echo>
        <!--<echo>JDK9 javac: ${javac1.9}</echo>-->
        <!--<echo>JDK9 dir: ${JDK1.9.dir}</echo>-->

    </target>

    <!--
        <fail message="Unsupported Java version: ${ant.java.version}.  Make sure that the Java version is 1.9 or greater.">
            <condition>
                <not>
                    <or>
                        <equals arg1="${ant.java.version}" arg2="1.9"/>
                    </or>
                </not>
            </condition>
        </fail>
    -->
    <!--  Create a classpath container which can be later used in the ant task -->
    <path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${libvertx.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement path="${classes.dir}"/>
    </path>

    <!-- Clean all the generated files -->
    <target name="clean" description="Removing the all generated files.">
        <delete dir="${classes.dir}"/>
        <delete dir="${api.dir}"/>
        <delete dir="${dest.dir}"/>
    </target>

    <!-- Cleans the folder and creates the necessary directories -->
    <target name="init" depends="clean">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${api.dir}"/>
        <mkdir dir="${dest.dir}"/>
    </target>

    <!-- Compile the program -->
    <target name="compile" depends="init" description="Compilation of all source code.">
        <javac executable="${javac1.9}"
               destdir="${classes.dir}"
               fork="yes"
               failonerror="true"
               includeantruntime="false"
               compiler="javac1.9">
            <src path="${src.dir}"/>
            <classpath refid="compile.classpath"/>
        </javac>
        <echo message="Compiling done"/>
    </target>

    <!-- Creates Javadoc -->
    <target name="javadoc" depends="compile" description="Generate documentation">
        <javadoc sourcepath="${src.dir}" destdir="${api.dir}" version="true">
            <classpath refid="compile.classpath"/>
        </javadoc>
        <echo message="Java doc created"/>
    </target>

    <target name="copy_dependencies">
        <copy todir="${dest.dir}/libs">
            <fileset dir="${lib.dir}"/>
        </copy>
    </target>

    <!-- Creates the executable jar file -->
    <target name="jar" depends="compile" description="Generates Thaw.jar file in to the dest directory.">
        <pathconvert property="mf.classpath" pathsep=" ">
            <path refid="compile.classpath"/>
        </pathconvert>

        <tstamp/>
        <manifest file="${dest.dir}/MANIFEST.MF">
            <attribute name="Built-By" value="${user.name}"/>
            <attribute name="Built-Date" value="${TODAY}"/>
            <attribute name="Main-Class" value="${main.class}"/>
            <attribute name="Class-Path" value="${mf.classpath}"/>
        </manifest>

        <jar jarfile="${dest.dir}/${app.name}-${app.version}.jar"
             manifest="${dest.dir}/MANIFEST.MF"
             duplicate="preserve">

            <fileset dir="${classes.dir}"/>
            <zipfileset dir="${lib.dir}">
                <include name="**/*.jar"/>
                <exclude name="**/*javadoc.jar"/>
                <exclude name="**/*sources.jar"/>
            </zipfileset>

            <zipfileset dir="${libvertx.dir}">
                <include name="**/*.jar"/>
            </zipfileset>
        </jar>
        <echo message="Jar file created"/>
    </target>

    <target name="all" depends="jar,javadoc" description="Create the jar file and the javadoc ">
        <echo message="Generation complete."/>
    </target>
</project>